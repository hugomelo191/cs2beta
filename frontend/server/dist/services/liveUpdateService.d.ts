declare class LiveUpdateService {
    private intervals;
    /**
     * ðŸ”¥ ATUALIZADO: Inicia monitorizaÃ§Ã£o APENAS de equipas registadas
     */
    startLiveMatchesMonitoring(): void;
    /**
     * Para monitorizaÃ§Ã£o de matches
     */
    stopLiveMatchesMonitoring(): void;
    /**
     * ðŸ”¥ NOVO: Verifica matches apenas das equipas registadas
     */
    private checkRegisteredTeamsMatches;
    /**
     * ðŸ”¥ ATUALIZADO: Envia update apenas para matches de equipas registadas
     */
    broadcastLiveMatchUpdate(matchData: any): void;
    /**
     * Envia update de jogador especÃ­fico
     */
    broadcastPlayerUpdate(playerId: string, playerData: any): void;
    /**
     * ðŸ”¥ NOVO: Envia update especÃ­fico para equipas registadas
     */
    broadcastRegisteredTeamUpdate(teamId: string, teamData: any): void;
    /**
     * Envia update de equipa especÃ­fica
     */
    broadcastTeamUpdate(teamId: string, teamData: any): void;
    /**
     * ðŸ”¥ NOVO: Notifica quando nova equipa se regista
     */
    broadcastNewTeamRegistration(teamData: any): void;
    /**
     * Envia notificaÃ§Ã£o de novo match
     */
    broadcastNewMatch(matchData: any): void;
    /**
     * ðŸ”¥ ATUALIZADO: Rankings baseados em equipas registadas
     */
    broadcastRankingUpdate(rankingData: any): void;
    /**
     * ðŸ”¥ NOVO: Limpa dados temporÃ¡rios de adversÃ¡rios periodicamente
     */
    startTemporaryDataCleanup(): void;
    /**
     * Limpa todos os intervals
     */
    cleanup(): void;
}
export declare const liveUpdateService: LiveUpdateService;
export {};
//# sourceMappingURL=liveUpdateService.d.ts.map